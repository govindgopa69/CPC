// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
class Solution
{
public:
    vector<int> singleNumber(vector<int> nums) 
    {
        int xor1 = nums[0];
        int x=0, y=0;
        int set_bit_no;
        for(int i=1; i<nums.size(); i++){
            xor1 = xor1 ^ nums[i];
        }
        set_bit_no = xor1 & ~(xor1 - 1);
        for(int i=0; i<nums.size(); i++){
            if(set_bit_no & nums[i]){
                x = x ^ nums[i];
            }
            else{
                y = y ^ nums[i];
            }
        }
        vector<int> ret;
        ret.push_back(x);
        ret.push_back(y);
        return ret;
    }
};

// { Driver Code Starts.
int main(){
    int T;
    cin >> T;
    while(T--)
    {
    	int n; 
    	cin >> n;
    	vector<int> v(2 * n + 2);
    	for(int i = 0; i < 2 * n + 2; i++)
    		cin >> v[i];
    	Solution ob;
    	vector<int > ans = ob.singleNumber(v);
    	for(auto i: ans)
    		cout << i << " ";
    	cout << "\n";
    }
	return 0;
}  // } Driver Code Ends
